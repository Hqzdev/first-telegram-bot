from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
import random

router = Router()

# –†–æ–ª–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
ACTIONS = {
    "hug": ["–æ–±–Ω—è–ª", "–æ–±–Ω—è–ª–∞", "ü§ó"],
    "kiss": ["–ø–æ—Ü–µ–ª–æ–≤–∞–ª", "–ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞", "üíã"],
    "pat": ["–ø–æ–≥–ª–∞–¥–∏–ª", "–ø–æ–≥–ª–∞–¥–∏–ª–∞", "ü§ö"],
    "bite": ["—É–∫—É—Å–∏–ª", "—É–∫—É—Å–∏–ª–∞", "üòà"],
    "slap": ["—É–¥–∞—Ä–∏–ª", "—É–¥–∞—Ä–∏–ª–∞", "üëã"],
    "kill": ["—É–±–∏–ª", "—É–±–∏–ª–∞", "üíÄ"],
    "love": ["–ø—Ä–∏–∑–Ω–∞–ª—Å—è –≤ –ª—é–±–≤–∏ –∫", "–ø—Ä–∏–∑–Ω–∞–ª–∞—Å—å –≤ –ª—é–±–≤–∏ –∫", "‚ù§Ô∏è"],
    "marry": ["–∂–µ–Ω–∏–ª—Å—è –Ω–∞", "–≤—ã—à–ª–∞ –∑–∞–º—É–∂ –∑–∞", "üíç"],
    "dance": ["—Ç–∞–Ω—Ü—É–µ—Ç —Å", "—Ç–∞–Ω—Ü—É–µ—Ç —Å", "üíÉ"],
    "cry": ["–ø–ª–∞—á–µ—Ç –∏–∑-–∑–∞", "–ø–ª–∞—á–µ—Ç –∏–∑-–∑–∞", "üò¢"],
    "laugh": ["—Å–º–µ—ë—Ç—Å—è –Ω–∞–¥", "—Å–º–µ—ë—Ç—Å—è –Ω–∞–¥", "üòÇ"],
    "poke": ["—Ç—ã–∫–∞–µ—Ç", "—Ç—ã–∫–∞–µ—Ç", "üëâ"],
    "wave": ["–º–∞—à–µ—Ç", "–º–∞—à–µ—Ç", "üëã"],
    "highfive": ["–¥–∞–ª –ø—è—Ç—å", "–¥–∞–ª–∞ –ø—è—Ç—å", "üñê"],
    "handshake": ["–ø–æ–∂–∞–ª —Ä—É–∫—É", "–ø–æ–∂–∞–ª–∞ —Ä—É–∫—É", "ü§ù"],
    "bow": ["–ø–æ–∫–ª–æ–Ω–∏–ª—Å—è", "–ø–æ–∫–ª–æ–Ω–∏–ª–∞—Å—å", "üôá"],
    "wink": ["–ø–æ–¥–º–∏–≥–Ω—É–ª", "–ø–æ–¥–º–∏–≥–Ω—É–ª–∞", "üòâ"],
    "sleep": ["—Å–ø–∏—Ç —Ä—è–¥–æ–º —Å", "—Å–ø–∏—Ç —Ä—è–¥–æ–º —Å", "üò¥"],
    "punch": ["—É–¥–∞—Ä–∏–ª", "—É–¥–∞—Ä–∏–ª–∞", "üëä"],
    "feed": ["–ø–æ–∫–æ—Ä–º–∏–ª", "–ø–æ–∫–æ—Ä–º–∏–ª–∞", "üçΩ"]
}

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
def generate_action_message(action, user_name, target_name, gender="male"):
    if action not in ACTIONS:
        return None
    
    verb, _, emoji = ACTIONS[action]
    if gender == "female":
        verb = ACTIONS[action][1]
    
    messages = [
        f"{emoji} | {user_name} {verb} {target_name}",
        f"{emoji} | {user_name} –Ω–µ–∂–Ω–æ {verb} {target_name}",
        f"{emoji} | {user_name} –º–∏–ª–æ {verb} {target_name}",
        f"{emoji} | {user_name} –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ {verb} {target_name}",
        f"{emoji} | {user_name} —Å—Ç—Ä–∞—Å—Ç–Ω–æ {verb} {target_name}"
    ]
    return random.choice(messages)

# –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
for action in ACTIONS.keys():
    @router.message(Command(action))
    async def handle_action(message: Message):
        command = message.text.split()[0][1:]  # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –±–µ–∑ /
        try:
            target = " ".join(message.text.split()[1:])
            if not target:
                await message.reply(f"‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /{command} <–∏–º—è>")
                return
                
            user_name = message.from_user.first_name
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª –ø–æ –∏–º–µ–Ω–∏ (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
            gender = "female" if user_name.lower().endswith(('–∞', '—è')) else "male"
            
            action_message = generate_action_message(command, user_name, target, gender)
            if action_message:
                await message.reply(action_message)
            
        except Exception as e:
            await message.reply(f"‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /{command} <–∏–º—è>")

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@router.message(Command("me"))
async def me_action(message: Message):
    try:
        action = " ".join(message.text.split()[1:])
        if not action:
            await message.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /me <–¥–µ–π—Å—Ç–≤–∏–µ>")
            return
            
        user_name = message.from_user.first_name
        await message.reply(f"üé≠ | {user_name} {action}")
    except:
        await message.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /me <–¥–µ–π—Å—Ç–≤–∏–µ>")

@router.message(Command("do"))
async def do_action(message: Message):
    try:
        action = " ".join(message.text.split()[1:])
        if not action:
            await message.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /do <–¥–µ–π—Å—Ç–≤–∏–µ>")
            return
            
        await message.reply(f"üé≠ | {action}")
    except:
        await message.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /do <–¥–µ–π—Å—Ç–≤–∏–µ>") 