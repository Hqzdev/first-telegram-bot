from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.filters import Command
from config import RAPIDAPI_KEY
import re
import aiohttp
import os
import logging
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

router = Router()

# –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —ç–º–æ–¥–∑–∏
main_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
            KeyboardButton(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        ],
        [
            KeyboardButton(text='üéÆ –ò–≥—Ä—ã'),
            KeyboardButton(text='üéµ –ú—É–∑—ã–∫–∞')
        ],
        [
            KeyboardButton(text='üå§ –ü–æ–≥–æ–¥–∞'),
            KeyboardButton(text='üì± –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
        ],
        [
            KeyboardButton(text='üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ'),
            KeyboardButton(text='‚è∞ –í—Ä–µ–º—è')
        ]
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start_handler(message: Message):
    welcome_text = """
üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!* üåü

–Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç:
‚Ä¢ üì• –°–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok
‚Ä¢ üå§ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É
‚Ä¢ üéÆ –ò–≥—Ä–∞—Ç—å –≤ –º–∏–Ω–∏-–∏–≥—Ä—ã
‚Ä¢ üéµ –ò—Å–∫–∞—Ç—å –º—É–∑—ã–∫—É
‚Ä¢ ‚ö°Ô∏è –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
/menu - –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/games - –º–∏–Ω–∏-–∏–≥—Ä—ã
/weather - –ø–æ–≥–æ–¥–∞
/music - –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏

*–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok*, –∏ —è —Å–∫–∞—á–∞—é –¥–ª—è –≤–∞—Å –≤–∏–¥–µ–æ!
    """
    await message.answer(welcome_text, parse_mode="Markdown", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@router.message(Command("help"))
async def help_handler(message: Message):
    help_text = """
üìö *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:*

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/menu - üì± –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - üìñ –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

*–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:*
/games - üéÆ –ú–∏–Ω–∏-–∏–≥—Ä—ã
/random - üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
/music - üéµ –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏

*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:*
/weather - üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É
/time - ‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
/info - ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

*–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞:*
/settings - ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
/support - üì± –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π

*–†–∞–±–æ—Ç–∞ —Å TikTok:*
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ TikTok, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è –≤–∞—Å! üì•
    """
    await message.answer(help_text, parse_mode="Markdown")

@router.message(Command("menu"))
async def show_menu(message: Message):
    await message.reply("üì± –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ò–≥—Ä—ã
@router.message(Command("games"))
async def games_handler(message: Message):
    games_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üé≤ –ö–æ—Å—Ç–∏", callback_data="game_dice"),
            InlineKeyboardButton(text="‚úÇÔ∏è –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞", callback_data="game_rps")
        ],
        [
            InlineKeyboardButton(text="üéØ –î–∞—Ä—Ç—Å", callback_data="game_darts"),
            InlineKeyboardButton(text="üé∞ –°–ª–æ—Ç—ã", callback_data="game_slots")
        ]
    ])
    await message.answer("üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", reply_markup=games_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–≥—Ä
@router.callback_query(lambda call: call.data.startswith("game_"))
async def game_callback(call):
    game = call.data.split("_")[1]
    if game == "dice":
        await call.message.answer_dice(emoji="üé≤")
    elif game == "darts":
        await call.message.answer_dice(emoji="üéØ")
    elif game == "slots":
        await call.message.answer_dice(emoji="üé∞")
    elif game == "rps":
        rps_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úä –ö–∞–º–µ–Ω—å", callback_data="rps_rock"),
                InlineKeyboardButton(text="‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", callback_data="rps_scissors"),
                InlineKeyboardButton(text="‚úã –ë—É–º–∞–≥–∞", callback_data="rps_paper")
            ]
        ])
        await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ö–æ–¥:", reply_markup=rps_keyboard)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏
@router.message(Command("time"))
async def time_handler(message: Message):
    current_time = datetime.now().strftime("%H:%M:%S")
    await message.answer(f"‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
@router.message(Command("random"))
async def random_handler(message: Message):
    from random import randint
    number = randint(1, 100)
    await message.answer(f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ (1-100): *{number}*", parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
@router.message(Command("info"))
async def info_handler(message: Message):
    info_text = """
‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ*

ü§ñ –Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è:
‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ TikTok
‚Ä¢ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ –º–∏–Ω–∏-–∏–≥—Ä
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

üìä *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ TikTok
‚Ä¢ –ú–∏–Ω–∏-–∏–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ
‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã

üîß *–í–µ—Ä—Å–∏—è:* 1.0.0
üë®‚Äçüíª *–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:* @your_username

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥!
    """
    await message.answer(info_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–æ–∫
@router.message(F.text)
async def handle_text(message: Message):
    text = message.text.lower()
    
    if "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" in text:
        await info_handler(message)
    elif "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" in text:
        await message.answer("‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞*\n\n–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.", parse_mode="Markdown")
    elif "–∏–≥—Ä—ã" in text:
        await games_handler(message)
    elif "–º—É–∑—ã–∫–∞" in text:
        await message.answer("üéµ *–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª*\n\n–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", parse_mode="Markdown")
    elif "–ø–æ–≥–æ–¥–∞" in text:
        await weather_options(message)
    elif "–ø–æ–¥–¥–µ—Ä–∂–∫–∞" in text:
        await message.answer("üì± *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @your_username", parse_mode="Markdown")
    elif "—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ" in text:
        await random_handler(message)
    elif "–≤—Ä–µ–º—è" in text:
        await time_handler(message)
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫–æ–π –Ω–∞ TikTok
        match = re.search(r'https?://[^/]*tiktok\.com/[^\s]+', message.text)
        if match:
            await process_tiktok_link(message)

async def process_tiktok_link(message: Message):
    await message.reply("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ TikTok...")
    try:
        video_url = await get_tiktok_video_url(message.text)
        if video_url:
            filename = f"tiktok_{message.from_user.id}.mp4"
            await download_video(video_url, filename)
            video = FSInputFile(filename)
            await message.answer_video(video)
            os.remove(filename)
        else:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}", exc_info=True)
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}")

@router.message(lambda message: "–ü—Ä–∏–≤–µ—Ç" in message.text.lower())
async def greet_user(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")

@router.message(lambda message: "weather" in message.text.lower())
async def weather_options(message: Message):
    weather_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Moscow", callback_data="weather_moscow")],
        [InlineKeyboardButton(text="Saint Petersburg", callback_data="weather_spb")],
        [InlineKeyboardButton(text="Novosibirsk", callback_data="weather_novosibirsk")],
    ])
    await message.reply("Choose the city", reply_markup=weather_keyboard) 

@router.callback_query(lambda call: call.data.startswith("weather_"))
async def weather_callback(call):
    city = call.data.split("_")[1]
    city_names = {
        "moscow": "Moscow",
        "spb": "Saint Petersburg",
        "novosibirsk": "Novosibirsk"
    }
    selected_city = city_names.get(city, "Unknown city")
    await call.message.answer(f"Weather in {selected_city}: Weather forecast is not available yet.")
    await call.answer()

async def get_tiktok_video_url(tiktok_url):
    logger.debug(f"–ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–¥–µ–æ: {tiktok_url}")
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É –≤ –ø–æ–ª–Ω—É—é, –µ—Å–ª–∏ —ç—Ç–æ vt.tiktok.com
    if 'vt.tiktok.com' in tiktok_url:
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(tiktok_url, allow_redirects=True) as response:
                    tiktok_url = str(response.url)
                    logger.debug(f"–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: {tiktok_url}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {str(e)}")
    
    api = "https://tiktok-video-downloader-api.p.rapidapi.com/"
    headers = {
        "X-RapidAPI-Key": RAPIDAPI_KEY,
        "X-RapidAPI-Host": "tiktok-video-downloader-api.p.rapidapi.com",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "Accept": "application/json"
    }
    
    try:
        async with aiohttp.ClientSession() as session:
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞ –∫ {api}")
            data = {"url": tiktok_url}
            async with session.post(api, json=data, headers=headers) as resp:
                logger.debug(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API. –°—Ç–∞—Ç—É—Å: {resp.status}")
                logger.debug(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {resp.headers}")
                
                if resp.status == 200:
                    try:
                        data = await resp.json()
                        logger.debug(f"–û—Ç–≤–µ—Ç API: {data}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –≤–∏–¥–µ–æ –≤ –æ—Ç–≤–µ—Ç–µ
                        if data.get("video"):
                            video_url = data["video"][0]
                            if video_url:
                                logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {video_url}")
                                return video_url
                        
                        if data.get("links"):
                            video_url = data["links"][0].get("link")
                            if video_url:
                                logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ links: {video_url}")
                                return video_url
                                
                        if data.get("data"):
                            video_url = data["data"].get("play") or data["data"].get("video")
                            if video_url:
                                logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ data: {video_url}")
                                return video_url
                        
                        logger.warning("–í –æ—Ç–≤–µ—Ç–µ API –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ")
                        logger.debug(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API: {json.dumps(data, indent=2)}")
                        return None
                    except json.JSONDecodeError as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: {str(e)}")
                        text_response = await resp.text()
                        logger.debug(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {text_response}")
                        return None
                else:
                    error_text = await resp.text()
                    logger.error(f"API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É {resp.status}. –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {error_text}")
                    return None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}", exc_info=True)
        return None

async def download_video(url, filename):
    logger.debug(f"–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {url}")
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status == 200:
                    logger.debug("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç 200, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª")
                    with open(filename, "wb") as f:
                        content = await resp.read()
                        f.write(content)
                    logger.info(f"–§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ. –°—Ç–∞—Ç—É—Å: {resp.status}")
                    raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ. –°—Ç–∞—Ç—É—Å: {resp.status}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {str(e)}", exc_info=True)
        raise